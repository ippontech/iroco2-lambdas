import os
import requests

class IrocoService:

    def __init__(self):
        self.api_key = os.environ.get("IROCO2_API_KEY")
        self.iroco_endpoint = os.environ.get("IROCO2_API_ENDPOINT")
        self.gateway_endpoint  = os.environ.get("IROCO2_GATEWAY_ENDPOINT")
        
    def __build_header(self):
        """
        Build header
        """
        return {
            'Authorization': f"Bearer {self.api_key}",
            'Content-Type': "application/json",
        }

    def create_scan(self):
        """
        Create a scan
        """
        try:
            response = requests.post(self.iroco_endpoint, headers=self.__build_header())
            response.raise_for_status()
        except requests.exceptions.HTTPError as errh:
            print("HTTP Error")
            print(errh)
            return None
        return response.json()

    def send_payload(self, payload):
        """
        Send a payload
        """
        try:
            send_report = requests.post(self.gateway_endpoint, json=payload, headers=self.__build_header())
            send_report.raise_for_status()
            return send_report.status_code
        except requests.exceptions.HTTPError as errh: 
            print("HTTP Error") 
            print(errh.args[0])
            return send_report.status_code 
        except requests.exceptions.ConnectionError as conerr: 
            print("Connection error")
            print(conerr)
            return send_report.status_code
        except requests.exceptions.RequestException as errex: 
            print("Exception request")
            print(errex)
        return send_report.status_code